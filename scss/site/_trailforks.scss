@use 'color';


@mixin enums {
    .tf-condition {
        &.mud {color: brown;}
        &.wet {color: blue;}
        &.dry {color: #dbb600;}
        &.very-dry {color: #cf0000;}
        &.icy {color: color.shade(fg, 30%);}
        &.snow {color: color.shade(fg, 20%);}
        &.ideal {color: green;}
    }

    .tf-status {
        &.clear {color: green;}
        &.minor-issue {color: #dbb21d;}
        &.significant-issue {color: #fa0000;}
        &.closed {color: red;}
    }

    .tf-difficulty {
        &.road {color: color.get(fg);}
    }
}


@mixin dialog {
    &.trailforks-overview {
        * {
            box-sizing: border-box;
        }

        .ui-dialog-content {
            flex-direction: row;
            flex-wrap: wrap;
        }

        section {
            min-width: 300px;
            flex: 1 1 50%;
            padding: 0;
            overflow: hidden;
            margin-bottom: 1em;
        }

        .map {
            height: 25em;
            border-radius: 0.28em;
            margin: 1rem;
        }

        .sparkline.elevation {
            margin: 1rem;
            padding-top: 1.15em;
            position: relative;

            &::before {
                content: 'Elevation';
                font-variant: all-small-caps;
                position: absolute;
                top: 0;
                left: 0;
                font-weight: bold;
            }
        }

        .panel {
            padding: 1rem;
            background: color.shade(bg, 10%);
            margin: 1em;
            border-radius: 0.28em;
            display: flex;
            position: relative;
            flex-direction: column;

            heading {
                display: flex;
                justify-content: space-between;

                h1 {
                    font-size: 1.2em;
                    line-height: 1.1;
                    color: color.shade(accent, 5%);
                    margin: 0;
                    font-variant: all-small-caps;
                    font-weight: bold;
                    padding-bottom: 0.5em;
                }

                a.external svg[data-icon] {
                    width: 0.7em;
                }
            }

            .sauce-media {
                display: flex;
                align-items: center;
                overflow: auto;

                .item {
                    padding: 0.2em;

                    a.tf-media {
                        display: block;
                        line-height: 0;

                        > * {
                            width: 8em;
                            height: 8em;
                            object-fit: cover;
                            border-radius: 0.28em;
                        }
                    }
                }
            }

            .item {
                padding: 0.2em 0;
                display: flex;
                align-items: center;

                key {
                    min-width: 14ch;
                    color: color.shade(fg, 5%);
                    margin-right: 0.3em;
                    font-variant: all-small-caps;
                    font-weight: bold;
                }
            }

            .report {
                padding: 1em;
                margin-bottom: 1px solid grey;

                .age {
                    font-size: 0.72em;
                    opacity: 0.8;
                }
            }

            img.tf-difficulty {
                margin: 0 0.44em;
                max-width: 2.2em;
                max-height: 2.2em;
                object-fit: contain;
            }

            .tf-difficulty,
            .tf-condition,
            .tf-status {
                svg[data-icon] {
                    width: 1.2em;
                    margin: 0 0.52em 0.2em;
                }
            }
        }
    }
}
