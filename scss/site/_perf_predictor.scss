@use 'color';

@mixin dialog {
    &.sauce-perf-predictor {
        // height settings for sticky output..
        height: max-content !important;
        // Fixed center pos...
        position: fixed;
        top: 1rem !important;
        left: 1rem !important;
        right: 1rem !important;
        bottom: 1rem !important;
        margin: auto;
        max-width: calc(100vw - 2rem - (100vw - 100%));
        max-height: calc(100vh - 2rem - (100vh - 100%));

        .ui-dialog-content {
            display: flex;
            flex-wrap: wrap;
            flex-direction: row;
            padding: 0;
        }

        form.input {
            flex: 1 1 60%;
            max-width: 100%;
        }

        .indent {
            display: flex;
            flex-direction: column;
        }

        .columns {
            flex-direction: row;
            flex-wrap: wrap;

            .left-col {
                flex: 0 1 auto;
            }

            .right-col {
                flex: 0 0 auto;
            }
        }

        .output {
            flex: 1 1 40%;
            min-width: 300px;
            max-width: 100%;
            max-height: 100%;  // for sticky scroll to work
            position: sticky;
            top: 0;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            background-image: linear-gradient(180deg,
                                              #{color.shade(fg, 18%)},
                                              #{color.shade(fg, -18%)} 1.5em,
                                              #{color.shade(fg, 10%)});
            color: color.shade(bg, 10%);

            @keyframes pulse {
                0%, 100% {
                    box-shadow: inset 0 0 1px 2px transparent;
                }
                80% {
                    box-shadow: inset 0 0 1px 2px color.get(accent3);
                }
            }

            .entry {
                padding: 0.2em 1.2em 0.4em;
            }

            .heading {
                font-size: 1.4em;
                font-weight: bold;
                font-variant: petite-caps;
                color: color.get(bg);
            }

            key {
                width: 10ch;
                color: inherit;
            }

            section {
                padding: 1em;

                &.predicted {
                    &.pulse {
                        animation: pulse 600ms 1;
                    }

                    .power-details {
                        dot {
                            display: inline-block;
                            width: 0.7em;
                            height: 0.7em;
                            border-radius: 100%;
                            margin-right: 0.2em;
                        }

                        .pct:not(:empty)::before {
                            content: ' | ';
                            color: color.shade(fg, 8%);
                        }

                        .left-col {
                            font-size: 0.92em;
                        }
                    }
                }

                .ahead-behind {
                    font-size: 0.85em;

                    &:not(:empty)::before {
                        content: ' | ';
                        color: color.shade(fg, 12%);
                    }
                }
            }

            .piechart {
                align-self: center;
                width: 4.25em;
                height: 4.25em;
            }
        }

        input[type="number"] {
            width: calc(7ch + 1em);
            text-align: right;
        }
    }


    @media only screen and (max-width: 768px) {
        &.sauce-perf-predictor {
            top: 0 !important;
            left: 0 !important;
            right: 0 !important;
            bottom: 0 !important;
            height: 100vh !important;
            width: 100vw !important;
            max-height: initial;
            max-width: initial;
            margin: 0;
        }
    }
}
