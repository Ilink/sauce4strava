@use 'color';

@mixin dialog {
    &.sauce-perf-predictor {
        // height settings for sticky output..
        height: max-content !important;
        // Fixed center pos...
        position: fixed;
        top: 1rem !important;
        left: 1rem !important;
        right: 1rem !important;
        bottom: 1rem !important;
        margin: auto;
        max-width: calc(100vw - 2rem - (100vw - 100%));
        max-height: calc(100vh - 2rem - (100vh - 100%));

        .ui-dialog-content {
            display: flex;
            flex-wrap: wrap;
            flex-direction: row;
            padding: 0;
        }

        label {
            display: inline-block;
            padding: 0.5em 0.2em;
            margin: 0;
        }

        form.input {
            flex: 1 1 60%;
            max-width: 100%;
            padding: 0.8em 0 1.2em;

            .intro {
                padding: 1em;
                margin: 0;
            }

            .entry {
                padding: 0.2em 1.2em;
            }

            > .entry:nth-of-type(odd) {
                background-color: color.shade(bg, 5%);
            }

            .divider {
                display: flex;
                align-items: center;
                padding: 0.5em;

                &::before,
                &::after {
                    flex: 1 1 auto;
                    content: '';
                    border-bottom: 1px solid color.shade(bg, 20%);
                    margin: 0 0.25em;
                }
            }

            key {
                width: 16ch;
            }

            a.help-info {
                float: right;
                width: 1.1em;
                height: 1.1em;
                margin: 0.25em 0 0.35em 0.35em;
                color: color.get(fg);

                &.hidden {
                    display: none;
                }

                &:hover {
                    color: color.shade(fg, -12%);
                }
            }

            .help {
                background-image: linear-gradient(to bottom,
                                                  color.shade(accent3, 10%),
                                                  color.get(accent3));
                color: color.shade(accent3, 60%);
                padding: 1.2em;
                margin: 0 0 1em;
                border-radius: 0.5em;
                position: relative;
                font-size: 0.85em;

                &:not(.visible) {
                    display: none;
                }

                a.dismiss {
                    float: right;
                    margin-right: -0.5em;
                    margin-top: -0.5em;
                    filter: invert(1);
                }

                &::after {
                    content: '';
                    border-color: color.get(accent3) transparent transparent transparent;
                    border-width: 0.5em 0.5em 0 0.5em;
                    border-style: solid;
                    position: absolute;
                    bottom: -0.48em;  // firefox subpixel rendering is buggy, subtract 0.02em to avoid lines.
                    left: 1em;
                }

                table {
                    margin: 0 1em;

                    td:first-child {
                        white-space: nowrap;
                        font-weight: bold;
                        padding-right: 1em;
                    }
                }
            }
        }

        .indent {
            display: flex;
            flex-direction: column;
        }

        .columns {
            flex-direction: row;
            flex-wrap: wrap;

            .left-col {
                flex: 0 1 auto;
            }

            .right-col {
                flex: 0 0 auto;
            }
        }

        .output {
            flex: 1 1 40%;
            min-width: 300px;
            max-width: 100%;
            max-height: 100%;  // for sticky scroll to work
            position: sticky;
            top: 0;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            background-image: linear-gradient(180deg,
                                              #{color.shade(fg, 18%)},
                                              #{color.shade(fg, -18%)} 1.5em,
                                              #{color.shade(fg, 10%)});
            color: color.shade(bg, 10%);

            @keyframes pulse {
                0%, 100% {
                    box-shadow: inset 0 0 1px 2px transparent;
                }
                80% {
                    box-shadow: inset 0 0 1px 2px color.get(accent3);
                }
            }

            .entry {
                padding: 0.2em 1.2em 0.4em;
            }

            .heading {
                font-size: 1.4em;
                font-weight: bold;
                font-variant: petite-caps;
                color: color.get(bg);
            }

            key {
                width: 10ch;
                color: inherit;
            }

            label {
                color: inherit;
            }

            section {
                padding: 1em;

                &.predicted {
                    &.pulse {
                        animation: pulse 600ms 1;
                    }

                    .entry.total {
                        font-weight: bold;
                    }

                    .power-details {
                        dot {
                            display: inline-block;
                            width: 0.7em;
                            height: 0.7em;
                            border-radius: 100%;
                            margin-right: 0.2em;
                        }

                        .pct:not(:empty)::before {
                            content: ' | ';
                            color: color.shade(fg, 8%);
                        }

                        .left-col {
                            font-size: 0.92em;
                        }
                    }
                }

                .ahead-behind {
                    font-size: 0.85em;

                    &:not(:empty)::before {
                        content: ' | ';
                        color: color.shade(fg, 12%);
                    }
                }
            }

            .piechart {
                align-self: center;
                width: 4.25em;
                height: 4.25em;
            }
        }

        key {
            display: inline-block;
        }

        input {
            vertical-align: middle;
        }

        input[type="number"] {
            height: auto;
            width: calc(7ch + 1em);
            padding: 0.2em 0.5em;
            border-radius: 0.22em;
            text-align: right;

            &:invalid {
                border-color: red;
            }

            &::placeholder {
                opacity: 0.8;
            }
        }

        select {
            border-radius: 0.22em;
            padding: 0.25em 0.5em;
            margin: 0;
            top: initial;
            height: auto;
        }
    }


    @media only screen and (max-width: 768px) {
        &.sauce-perf-predictor {
            top: 0 !important;
            left: 0 !important;
            right: 0 !important;
            bottom: 0 !important;
            height: 100vh !important;
            width: 100vw !important;
            max-height: initial;
            max-width: initial;
            margin: 0;
        }
    }
}
