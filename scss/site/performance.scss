@use 'chart';
@use 'color';
@use 'dialog';
@use 'buttons';


// Use px for media query compat..
$nav-width: 240px;
$main-width: 600px;
$aside-width: 260px;


#sauce-performance {

    select {
        border-radius: 0.22em;
        padding: 0.3em 0.4em;
        margin: 0.2em;
    }

    display: flex;
    flex-wrap: wrap;

    .title {
        font-weight: bold;
    }

    row {
        padding: 0.5em;
        display: flex;
        margin: 0.5em 0;
        align-items: center;

        key {
            flex: 1 0 50%;
            margin-right: 0.4em;
            font-weight: bold;
            font-size: 0.85em;
        }

        value {
            flex: 1 0 50%;
        }
    }

    > nav {
        display: flex;
        flex-direction: column;
        overflow: auto;
        flex: 1 0 $nav-width;
        padding: 1em;
        background-attachment: local;
        background-image: linear-gradient(to left,
                                    #{color.shade(bg, 16%)},
                                    #{color.shade(bg, 12%)} 0.5em,
                                    #{color.shade(bg, 10%)});

        .athlete {
            display: flex;

            select {
                flex: 1 1;
                min-width: 0;
            }

            button {
                flex: 0 0 auto;
            }
        }

        .summary {
            section {
                padding: 0.5em;
                background: color.shade(bg, 4%);
                border-radius: 0.28em;
                margin-top: 1em;
                margin-bottom: 1em;
            }
        }
    }

    > main {
        // We can't use a basis with chart.js's responsive mode.
        // Make the grow flex massive instead.
        flex: 100000 1 0;
        min-width: min(#{$main-width}, 100%);
        background: color.shade(bg, 2%);
        padding: 1em;
        display: flex;
        flex-direction: column;

        section.charts {
            padding: 1em;

            header {
                font-variant: small-caps;
                font-size: 0.9em;
                font-weight: bold;
                display: flex;
                align-items: center;
                justify-content: center;

                > * {
                    padding: 0 1em;
                }
            }

            .chart-holder {
                flex: 1 1 auto;
                position: relative; // required for responsive chart.js

                canvas {
                }
            }
        }
    }

    > aside.details {
        overflow: auto;
        flex: 1 0 0;
        transition: flex 200ms;
        color: color.shade(bg, 5%);
        background-attachment: local;
        $bg-gradient: linear-gradient(to right,
                                      #{color.shade(bg, 70%)},
                                      #{color.shade(bg, 118%)} 0.5em,
                                      #{color.shade(bg, 90%)});
        background-image: $bg-gradient;

        &.expanded {
            flex-basis: $aside-width;
        }

        header {
            display: flex;
            justify-content: space-between;
            padding: 1em;
            background-image: linear-gradient(to bottom,
                                              #{color.shade(bg, 50%, 0.15)},
                                              #{color.shade(bg, 30%, 0.15)} 1em,
                                              #{color.shade(bg, 60%, 0.15)}),
                              $bg-gradient;
            border-bottom: 1px solid color.shade(fg, 50%, 0.5);
            z-index: 10;

            .title {
                font-size: 1em;
            }

            .collapser svg[data-icon] {
                width: 1em;
                color: color.shade(bg, 0%);
                opacity: 0.8;
                transition: opacity 200ms;
                cursor: pointer;

                &:hover,
                &:active {
                    opacity: 1;
                }
                &:active {
                    color: color.shade(bg, 10%);
                }
            }
        }

        section.content {
            display: flex;
            flex-direction: column;
            padding: 1em;
        }

        a {
            color: color.shade(accent4, -10%) !important;
        }
    }

}

@media only screen and (min-width: #{$nav-width + $main-width + $aside-width}) {
    #sauce-performance {
        > nav {
            position: sticky;
            top: 0;
            max-height: 100vh;
        }

        > aside.details {
            position: sticky;
            top: 0;
            max-height: 100vh;

            header {
                position: sticky;
                top: 0;
            }
        }
    }
}
