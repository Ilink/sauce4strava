@use 'defines';
@use 'color';
@use 'perf_predictor';
@use 'live_segment';
@use 'trailforks';


// Use more specific selector to avoid race with application-xyz.css that strava loads
// at the same time as us.  Load order varies.
html .ui-dialog {
    background: transparent;
    border: none;
    font-size: 1em; // This is the default in analysis but not other pages, so we need to set it.

    .ui-widget-content,
    .ui-dialog-content {
        $bg: color.shade(bg, 3%);
        background-color: $bg;
        border-color: color.shade(bg, 12%);

        ul.tabs li.selected {
            background-color: $bg;

            .tab {
                background-color: transparent;
            }
        }
    }

    .ui-widget-header {
        border-color: color.shade(bg, 20%);
    }

    // Copy from analysis page so behavior is same elsewhere (perf page)
    form {
        > button,
        >input[type="submit"],
        form>input[type="button"] {
            margin-top: 10px;
        }
    }
}

.ui-dialog.sauce-dialog {
    outline: none;
    margin: 0;
    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.33);
    border-radius: 0.22em;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    font-family: inherit;  /* use strava font, not jquery */
    max-width: calc(100vw - (100vw - 100%));  // full viewport minus possible scrollbar
    max-height: calc(100vh - (100vh - 100%)); // full viewport minus possible scrollbar

    .ui-dialog-titlebar,
    .ui-dialog-buttonpane {
        flex: 0 0 auto;
    }

    .ui-dialog-buttonpane  .ui-dialog-buttonset {
        button svg[data-icon] {
            width: 1em;
            margin-left: 0.44em;
        }
    }

    .ui-dialog-content {
        flex: 1 1 auto;
        overflow: auto;
        flex-direction: column;
        width: auto !important; /* override element styling during moves */

        &.flex {
            display: flex !important;
        }
    }

    header {
        margin: 0.5em 1em;
        border-bottom: var(--sauce-thin-border);
    }

    &.sauce-big-data {
        max-width: 90vw;
        max-height: calc(100vh - 4em);

        .ui-dialog-content {
            padding: 0;
        }

        pre {
            padding: 1em 2em;
            white-space: pre;
            letter-spacing: 0;
        }

        label {
            display: inline-block;
            margin: 0 0.3em 0.5em;

            input {
                margin-right: 0.15em;
                margin-top: 0.2em;
            }
        }
    }

    &.no-pad .ui-dialog-content {
        padding: 0;
    }

    .padded-info {
        padding: 1.2em;
        margin: 0;
    }

    .overflow {
        overflow: auto;
    }

    a,
    .btn {
        &:focus {
            outline: none;
        }
    }

    a.help-info {
        float: right;
        width: 1.1em;
        height: 1.1em;
        margin: 0.25em 0 0.35em 0.35em;
        color: color.get(fg);
        cursor: pointer;
        opacity: 0.8;
        transition: opacity 200ms;

        &.hidden {
            display: none;
        }

        &:hover {
            opacity: 1;
        }
    }

    .help {
        background-image: linear-gradient(to bottom,
                                          color.shade(accent3, 10%),
                                          color.get(accent3));
        color: color.shade(accent3, 60%);
        padding: 1.2em;
        margin: 0 0 1em;
        border-radius: 0.5em;
        position: relative;
        font-size: 0.85em;

        &:not(.visible) {
            display: none;
        }

        a {
            color: color.get(accent2);
        }

        a.sauce-dismiss {
            float: right;
            margin-right: -0.75em;
            margin-top: -0.75em;
            cursor: pointer;
            opacity: 0.8;
            transition: opacity 200ms;

            &:hover {
                opacity: 1;
            }

            svg[data-icon] {
                color: white;
                width: 1em;
            }
        }

        &::after {
            content: '';
            border-color: color.get(accent3) transparent transparent transparent;
            border-width: 0.5em 0.5em 0 0.5em;
            border-style: solid;
            position: absolute;
            bottom: -0.48em;  // firefox subpixel rendering is buggy, subtract 0.02em to avoid lines.
            left: 1em;
        }

        table {
            margin: 0 1em;

            td:first-child {
                white-space: nowrap;
                font-weight: bold;
                padding-right: 1em;
            }
        }
    }

    form.sauce-key-value {
        padding-bottom: 1.2em;

        label {
            display: inline-block;
            padding: 0.5em 0.2em;
            margin: 0;
        }

        .entry {
            padding: 0.2em 1.2em;
        }

        > .entry:nth-of-type(odd) {
            background-color: color.shade(bg, 5%);
        }

        key {
            width: 16ch;
            display: inline-block;
        }

        input {
            vertical-align: middle;
        }

        input[type="number"],
        input[type="text"],
        input[type="date"] {
            border-radius: 0.22em;
            padding: 0.2em 0.5em;
            height: auto;

            &:invalid {
                border-color: red;
            }

            &::placeholder {
                opacity: 0.8;
            }
        }

        select {
            border-radius: 0.22em;
            padding: 0.25em 0.5em;
            margin: 0;
            top: initial;
            height: auto;
        }
    }

    // Reset firefox number input arrows to look like normal text input
    input[type=number]::-webkit-outer-spin-button,
    input[type=number]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    input[type=number] {
        -moz-appearance:textfield;
    }

    @include perf_predictor.dialog;
    @include live_segment.dialog;
    @include trailforks.dialog;

    .ui-dialog-titlebar {
        min-height: 0;
        background-image: linear-gradient(180deg,
                                          #{color.shade(accent, -8%)} 0%,
                                          #{color.shade(accent, -20%)} 100%);
        padding: 0.4em 0.7em;

        .ui-dialog-title {
            color: color.shade(accent, 70%);
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1em;

            .title-label {
                flex: 1 1 auto;
            }

            .title-icon {
                max-width: 1.8em;
                max-height: 1.8em;
                flex: 0 1 1.8em;
                display: flex; /* constrains inner svg icons */
                flex-direction: column;

                img {
                    max-width: 100%;
                    max-height: 100%;
                    object-fit: contain;
                }
            }
        }
    }

    .ui-widget-header {
        font-size: 1.1em;
    }

    .ui-dialog-titlebar-close {
        display: none;
    }

    .ui-dialog-buttonpane {
        margin: 0;
        padding: 0.4em;
    }

    .ui-dialog-buttonpane button {
        min-height: unset;
        border-radius: 0.25em;
        padding: 0.5em 0.8em;
        margin: 0.3em 0.5em;
        font-size: 0.85em;
    }

    footer {
        margin-top: 1em;
        font-size: 0.9em;
    }
}


.ui-dialog.sauce-dialog.sauce-sync-athlete-dialog {
    .btn-icon-only {
        opacity: 0.7;
        transition: opacity 200ms;

        &:hover {
            opacity: 1;
        }
    }

    .btn.sync-start {
        color: #00a900;
    }

    .btn.sync-stop {
        color: #c10000;
    }

    .btn.sync-recompute {
        color: #c37e00;
        font-size: 0.9em;
    }

    form.sauce-key-value {
        .entry {
            padding: 0.5em 1.2em;

            progress {
                margin-right: 0.8em;
            }

            input {
                background-color: transparent;
                border: 1px solid color.shade(bg, 14%);
                padding: 0.1em 0.4em;

                &:invalid {
                    border: 1px dashed red;
                }
            }

            input[type="number"] {
                width: 7ch;
                text-align: right;
            }

            input[type="date"] {
                width: auto;
            }

            &.history {
                border: solid 1px color.shade(bg, 15%);
                border-radius: 0.28em;
                background: color.shade(bg, 0%);
                margin: 1em 2em;
                padding: 1em;
                font-size: 0.9em;

                &:last-child {
                    margin-bottom: 0;
                }

                .indent {
                    padding: 0.4em;
                    margin-bottom: 0.2em;

                    .entry {
                        padding: 0.1em 1.2em;
                        display: flex;
                        align-items: center;

                        &:hover {
                            background-color: color.shade(bg, 2%);
                            border-radius: 0.28em;
                        }
                    }
                }

                &:not(.dirty) {
                    .save.btn {
                        display: none;
                    }
                }

                .btn.entry-add,
                .btn.entry-delete {
                    svg {
                        .fa-secondary {
                            color: color.shade(bg, 25%);
                            opacity: 0.8;
                        }
                    }
                }

                .btn.entry-add {
                    color: green;
                }

                .btn.entry-delete {
                    color: red;
                    flex: 1 0;
                    display: flex;
                    justify-content: flex-end;
                }
            }
        }
    }

    .ui-dialog-content {
        padding: 0;

        &.sync-active {
            .last-sync,
            .next-sync {
                display: none;
            }

            .sync-recompute,
            .sync-start {
                display: none;
            }
        }

        &:not(.sync-active):not(.sync-disabled) {
            .sync-stop {
                display: none;
            }
        }

        &.sync-disabled {
            .entry.synced,
            .entry.last-sync,
            .entry.next-sync,
            .entry.status {
                display: none;
            }

            .sync-stop,
            .sync-recompute,
            .sync-start {
                opacity: 0.5;
                pointer-events: none;
            }
        }

        &:not(.sync-active) {
            .entry.synced value progress {
                display: none;
            }
        }
    }
}
